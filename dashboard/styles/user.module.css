/*
const useStyles = createStyles((theme) => ({
  rowSelected: {
    backgroundColor: theme.colorScheme === 'dark' ? theme.fn.rgba(theme.colors[theme.primaryColor][7], 0.2) : theme.colors[theme.primaryColor][0],
  },
  value: {
    marginLeft: rem(1),
    marginRight: rem(1),
  },
  values: {
    maxWidth: rem(200),
    flexWrap: 'nowrap',
    overflowX: 'auto',
    '::-webkit-scrollbar': {
      height: '0.4rem',
    },
    '::-webkit-scrollbar-track': {
      boxShadow: 'inset 0 0 6px rgba(0,0,0,0.00)',
      webkitBoxShadow: 'inset 0 0 6px rgba(0,0,0,0.00)',
    },
    '::-webkit-scrollbar-thumb': {
      backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[3] : theme.colors.gray[5],
      borderRadius: '0.3rem',
    },
  },
  content: {
    padding: 0,
    paddingLeft: rem(60),

    [theme.fn.smallerThan('xs')]: {
      paddingLeft: rem(10),
    },
  },
}));
*/

.rowSelected {
  background-color: light-dark(var(--mantine-color-dark-2), var(--mantine-primary-color-0));
}

.value {
  margin-left: rem(1);
  margin-right: rem(1);
}

.values {
  max-width: rem(200);
  flex-wrap: nowrap;
  overflow-x: auto;
  scrollbar-width: thin;
  scrollbar-color: light-dark(var(--mantine-color-dark-3), var(--mantine-color-gray-5));

  &::-webkit-scrollbar {
    height: 0.4rem;
  }

  &::-webkit-scrollbar-track {
    box-shadow: inset 0 0 6px rgba(0, 0, 0, 0);
  }

  &::-webkit-scrollbar-thumb {
    background-color: light-dark(var(--mantine-color-dark-3), var(--mantine-color-gray-5));
    border-radius: 0.3rem;
  }
}

.content {
  padding: 0;
  padding-left: rem(60);

  @media (max-width: --mantine-breakpoint-xs) {
    padding-left: rem(10);
  }
}
