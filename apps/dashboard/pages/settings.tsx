import { GetServerSidePropsContext, InferGetServerSidePropsType } from "next";
import { useSession } from "next-auth/react";
import Head from "next/head";

import { Dashboard } from "@/components/layouts/Dashboard";
import { fetchSettings } from "@/utils/fetchSSRProps";
import { Accordion, Badge, Grid, Overlay, Paper, ScrollArea, Title } from "@mantine/core";

import UpdatePassword from "@/components/setttings/UpdatePassword";
import DeleteAccount from "@/components/setttings/DeleteAccount";
import UnlinkOAuth2 from "@/components/setttings/UnlinkOAuth2";
import DatabaseAction from "@/components/setttings/DatabaseAction";
import UpdateConfiguration from "@/components/setttings/UpdateConfiguration";

export default function Settings({ settings }: InferGetServerSidePropsType<typeof getServerSideProps>) {
  const { data: session } = useSession();
  const hasPermission = session?.user?.acl?.owner || session?.user?.acl?.admin;
  const isOAuth2 = !!session?.user?.oauth2?.provider;

  return (
    <>
      <Head>
        <title>pm2.web</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" type="image/png" href="/logo.png" />
      </Head>

      <Dashboard>
        <Grid
          flex={1}
          styles={{
            root: {
              display: "flex",
            },
          }}
        >
          <Grid.Col span={{ lg: 8, md: 7, sm: 6, xs: 12 }}>
            <Paper shadow="sm" radius="md" p={"md"} mih={"100%"} h={"100%"}>
              <Title order={3} style={{ marginBottom: "1rem" }}>
                Configuration
              </Title>
              <ScrollArea>
                <Accordion variant="filled">
                  <UpdateConfiguration settings={settings} />
                  <DatabaseAction />
                </Accordion>
                {!hasPermission && (
                  <Overlay color="#000" backgroundOpacity={0.1} radius={"md"} blur={7} center zIndex={2}>
                    <Badge size="xl" variant="outline" color="red">
                      Owner/Admin Permission required
                    </Badge>
                  </Overlay>
                )}
              </ScrollArea>
            </Paper>
          </Grid.Col>
          <Grid.Col span={{ lg: 4, md: 5, sm: 6, xs: 12 }}>
            <Paper shadow="sm" radius="md" p={"md"} style={{ height: "100%" }}>
              <Title order={3} style={{ marginBottom: "1rem" }}>
                User Settings
              </Title>
              <Accordion variant="filled">
                <UpdatePassword />
                <DeleteAccount />
                {isOAuth2 && <UnlinkOAuth2 />}
              </Accordion>
            </Paper>
          </Grid.Col>
        </Grid>
      </Dashboard>
    </>
  );
}

export async function getServerSideProps({ req, res }: GetServerSidePropsContext) {
  return {
    props: {
      settings: await fetchSettings(),
    },
  };
}
